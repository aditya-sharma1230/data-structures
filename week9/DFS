#include <stdio.h>

void dfs(int n, int cost[10][10], int u, int s[])  
{  
    int v;  
    s[u] = 1;  // Mark the current node as visited
    for(v = 0; v < n; v++)  
    {  
        if(cost[u][v] == 1 && s[v] == 0)  
            dfs(n, cost, v, s);  // Recursively visit all adjacent nodes
    }  
}  

int main()  
{  
    int n, i, j, cost[10][10], s[10], con = 0, flag;  

    // Input the number of nodes
    printf("Enter the number of nodes: ");  
    scanf("%d", &n);  
    
    // Input the adjacency matrix
    printf("Enter the adjacency matrix:\n");  
    for(i = 0; i < n; i++)  
    {  
        for(j = 0; j < n; j++)  
            scanf("%d", &cost[i][j]);  
    }  
    
    // Initialize all nodes as unvisited
    for(i = 0; i < n; i++)  
        s[i] = 0;  
    
    // Start DFS from the first node (node 0)
    dfs(n, cost, 0, s);  
    
    // Check if all nodes were visited
    flag = 0;  
    for(i = 0; i < n; i++)  
    {  
        if(s[i] == 0)  
        {  
            flag = 1;  // If any node is not visited, the graph is not connected
            break;  
        }  
    }  
    
    if(flag == 0)  
        printf("Graph is connected\n");  
    else  
        printf("Graph is not connected\n");  
    
    return 0;  
}  
